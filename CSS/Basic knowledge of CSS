
CSS
	1.CSS介绍
		CSS: Cascading Style Sheet 层叠样式表
	作用: 调整页面元素的显示外观,实现网页布局
	2.CSS使用
		在HTML文档中使用CSS样式表有三种方式
		1.内联样式/行内样式
			1.特点: 在标签中通过style属性,为元素设置样式
				语法:<标签名 style="属性:值;属性:值"></标签名>
				CSS中使用属性和值来声明样式
				常用的CSS属性:
				1.font-size  : 设置元素的字体大小,取像素值(默认16px);
				2.color      : 设置元素的字体颜色,取颜色值;
				3.background-color : 设置元素的背景颜色,取颜色值;
		2.文档内嵌
			特点:在文档中使用<style></style>标签,为文档中的元素设置样式
			语法:
				<style type="text/css">
					选择器{
						属性:值;
						属性2:值;
						...
					}
				</style>
				选择器:用来匹配文档中的元素并为其设置样式
				通过标签名匹配所有的该元素,叫标签选择器
		3.外链
			特点:在HTML文档中引入外部的样式表文件
			使用: 1.定义外部的样式表文件,以.css为后缀
				2.在HTML中使用<link rel="stylesheet" href="url" type="text/css">
	3.样式表的特征
		1.层叠型
			可以为一个元素设置多个样式,共同起作用
			p{
				color:red;
				background-color:green;
				font-size:32px;
			}
		2.继承性
			子元素可以继承父元素或祖先元素的某些css样式
			例如:大部分的文本属性都可以被继承
				块元素默认宽度与父元素保持一致

	4.选择器
		1.选择器的作用:
			根据不同的选择器,匹配文档中相应的元素,并为其设置样式
		2.选择器分类:
			1.标签选择器
				作用:根据标签名匹配文档中所有的该元素
				语法:
				标签名{
					属性:值;
				}
			
			*超链接的文本色需要主动设置,继承不来
			2.id选择器
				根据元素的id属性值匹配元素
				注意:所有的元素都有id属性,属性值自定义,ID属性具有唯一性
				语法: 
					#id属性值{
						样式
					}


1.HTML元素的分类及特点
	1.块级元素:
		1.独占一行,不与其他元素共行显示
		2.可以手动设置宽高
		3.默认宽度与父元素保持一致(table除外)
		常见块元素: h1,p,div,ul,table,form
	2.行内元素
		1.可以与其他元素共行像是
		2.默认尺寸由内容多少决定,不能手动设置宽高
		常见的航元素: span,label,i,b,strong,u,s,sub,sup,a
	3.行内块元素
		1.可以与其他元素共行显示
		2.可以手动设置宽高
		行内块元素: img,表单控件

2.HTML标签嵌套
	1.块元素中可以嵌套任何类型的元素
		特殊情况: 段落标签中只能放行内元素和行内块元素
	2.行内元素只能嵌套行内元素或者行内块元素
	3.行内溢出
		块元素可以手动设置宽高,如果内容超出尺寸范围,如何处理?
		属性: overflow
		取值: 
			1.visible 默认值,表示溢出内容可见
			2.hidden  溢出内容,隐藏
			3.scroll  为元素添加水平方向和垂直方向的滚动条,不管内容有没有溢出
			4.auto	     自动在溢出方向添加可用的滚动条
	4.边框
		CSS中认为所有的元素都是矩形区域
		边框是围绕元素内容出现的线条样式
		1.属性
			简写属性: border
			取值:
				width : 像素值,表示边框的宽度
				style : 边框样式,可取: solid(实线),dashed(虚线),dotted(点线),double(双线)
				color :颜色值,默认黑色
		特殊用法:
			1.边框默认具备3px的宽度,黑色的边框颜色,边框样式必须指定
			2.表单按钮可以取消边框
				border:none
			
		2.
		
		3.网页三角标制作
			1.元素的width height 设置为0
			2.涉及三角标,必须由边框拼接组成
			3.设置四个方向的边框,宽度保持一致
			4.通过颜色控制三角标显示
				透明色可以使用transparent表示
		4.圆角边框
			属性:border-radius
			取值:px/ % 百分比单位依据元素尺寸计算
			取值情况:
				1.取一个值(四角一致)
					border-radius : 5px;
					border-radius : 50%;
					一个值表示左上,右上,右下,左下四个角圆角程度相同,最大值取到50%,元素形状会发生变化(圆或椭圆)
				
				2.取两个值(对角一致)
					border-radius : 30px 50px;
					第一个值表示左上,右下的圆角程度
					第二个值表示左下,右上的圆角程度
					
				3.取三个值(第四角同第二角)
					border-radius : 5px 6px 7px (6px);
						三个值分别对应左上 , 右上 , 右下的圆角程度
						缺省第四个值会默认与其对角(第二个角)保持一致
				
				3.取四个值(各自取值)
					border-radius : 5px 6px 7px 8px;
						  依次是 左上 , 右上 , 右下 , 左下的圆角程度

		5.盒阴影
			为元素添加阴影效果
			属性: box-shadow
			取值:
				offset-x 阴影的水平偏移距离
				offset-y 阴影的垂直偏移距离,取像素值
				blur	   阴影的模糊程度,取像素值,值越大越模糊
				spread   阴影的延伸距离,取像素值(可省略)
			
			浏览器的坐标系
				不管是浏览器窗口,还是元素本身,都包含坐标系
				,默认以左上角为原点
	5.盒子模型/框模型
		1.介绍
			CSS中,认为所有元素皆为框
			1.元素在文档中的最终占据尺寸是由:内容尺寸,内边距大小,边框,外边距的大小决定的
			2.计算元素最终占据的大小
				在标准盒模型下:
					最终宽度=width+左右内边距+左右边框+左右外边距
					最终高度=height+上下内边距+上下边框+上下外边距
				其他盒模型元素尺寸的计算(表单元素)
					元素设置的width,height表示包含内容,内边距和边框在内的总宽度或总高度
					最终宽度=width+左右外边距
					最终高度=height+上下外边距
		2.外边距
			1.什么是外边距
				元素与元素之间的距离
			2.简写属性
				margin 表示外边距
				取值: 像素值
					取值情况: 
					1.margin: 10px 四个方向添加10px外边距
					2.margin:10px 20px 
							     上下  左右
					3.margin:10px 20px 30px
							      上	 左右  下
					4.margin:10px 20px 30px 40px
							      上   右   下    左

				特殊用法:
					1.margin :0;清除元素默认外边距
					2.左右外边距可以使用auto,实现元素的水平居中
					3.外边距可以取负值,参考浏览器坐标系,可以实现元素位置的微调
			3.单独设置四个方向的外边距
				属性:margin-top
					margin-right
					margin-bottom
					margin-left
				取值:只给一个值
			4.外边距合并
				1.垂直方向上的外边距(针对块元素的问题)
					1.margin-top
						问题: 给子元素添加的margin-top,会作用于父元素上
						解决:
						1.为父元素添加上边框
						2.为父元素设置padding-top 顶部内边距
							padding-top:0.1px;
						3.为父元素添加overflow:hidden;
					2.margin-bottom
						两个块元素,分别设置margin-bottom,margin-top,最终元素之间的距离取较大值
				2.水平方向上的外边距(行内元素)
					默认行内元素水平方向上的外边距会叠加显示
			5.默认具有外边距的元素
			body,h1~h6,p,ul,ol{
				margin:0;
			}
			
		内边距
			什么是内边距: 指的是元素内容与边框之间的距离
			简写属性
				属性: padding
				取值: 像素值
				取值情况:
					padding: 10px;
					在四个方向上,内容与边框之间的距离是10个像素
					padding: 10px 20px;
					上下的距离是10个像素,左右的内边哭是20px
					padding: 10px 20px 30px;
					
					padding: 10px 20px 30px 40px ;
			
			3.单独设置某个方向的内边距
				属性:
					padding-top
					padding-right
					padding-bottom
					padding-left
				取值: 给一个值
			4.不同元素类型对盒模型属性的支持情况
				1.块元素完全支持盒模型属性
				2.行内元素不完全支持盒模型属性(margin-top/margin-bottom)
			5.默认带有内边距的元素
				ul , ol 表单元素(文本框,按钮)
		4.box-sizing
			作用:指定盒模型的计算模型
			取值:
				1.content-box ,默认值
					元素的width,height属性只设置内容尺寸,最终在文档中占据的尺寸为margin border padding width/height 累加得到
				2.border-box
					元素的width,height属性设置包含边框在内的区域大小,一旦元素设置内边距和边框,会压缩内容显示区域,最终在文档中占据的尺寸为margin和width/height 累加得到
		





背景相关属性
	1.背景颜色
		属性:background-color
		取值:颜色值
	2.背景图片
		属性: background-image 
		取值: url('')
	3.背景图片相关属性
		1.背景图片重复平铺显示
			属性: background-repeat
			取值:
				1.repeat(默认值)
					当图片尺寸小于元素尺寸,会自动沿水平和垂直方向重复平铺,直到铺满元素
				2.repeat-x
					设置图片沿水平方向平铺
				3.repeat-y
					设置图片沿垂直方向平铺
				4.no-repeat
					设置图片不重复平铺
		2.背景图片的尺寸
			属性: background-size
			取值:
				1.像素值
					取两个值,分别设置背景宽高;
					取一个值,设置图片宽高等比缩放
				2.百分比
					取值效果和像素值类似
					不过是参照当前元素的宽高进行计算,100%为铺满
				3.cover
					覆盖,等比拉伸至能够完全覆盖元素(可能会有部分图像超出元素范围而不被显示)
				4.contain
					包含,等比拉伸至能被元素容纳的最大尺寸(可能元素的一部分没有被覆盖,而显示背景色)
				
		3.背景图片的位置
			属性: background-position
			取值
				1.像素值: x y
					x 表示背景图片水平偏移距离,正值表示向右
					y 表示背景图片垂直偏移距离,正值表示向下
					默认背景图片从元素左上角显示
				2.百分比
					0% 0% 显示在左上角
					50% 50% 居中显示
				3.方位值
					水平方向:left center right
					垂直方向:top center bottom
					设置方位值时,如果缺少某个方位值,默认center
			使用场景:
				"精灵图"技术,网页开发过程中为了节省资源,减少网络请求,通常会将一组小图标以一张图片的形式存储,通过一次网络请求加载图片,配合background-position控制图标切换显示
	4.背景属性简写:
		属性:background
		取值:color url() repeat position;
		如: 
			background:pink url(northstar.png) no-repeat 10px 10px;
				
	
文本与字体相关属性
	1.字体相关
		1.字体大小
			属性: font-size
			取值: 像素值
		2.指定字体名称
			属性: font-family
			取值: 字体名称
			语法注意:
				1.字体名称如果是中文,或者由多个英文单词组成,必须加引号
				2.可以设置多个字体名称作为备用字体,名称之间使用逗号隔开
			如: 
				font-family: Arial,"宋体","Microsoft YaHei";
		3.设置字体加粗
			属性: font-weight
			取值: 
				1.可以取关键字
					bold(加粗显示) / normal(默认正常显示)
				2.取无单位的整百数
					范围100~900
					400: 等价于normal
					700: 等价于bold
		4.设置字体样式(斜体)
			属性: font-style
			取值:
				1.normal(默认正常显示)
				2.italic(斜体显示)		
				3.oblique(文本倾斜显示)
					一般作为italic的可替代样式,可以实现倾斜效果,在某些情况下可以指定倾斜角度
		
		5.字体属性简写
			属性: font
			取值: style weight size family;(顺序强制)
			语法注意: 
				size和family是必须的
	
	2.文本相关
		1.文本颜色
			属性: color
			取值: 颜色值
		2.文本水平对齐方式
			属性: text-align
			取值: left(默认) / center / right
		3.文本装饰线
			属性: text-decoration
			取值: 
				1.underline  下划线
				2.overline   上划线
				3.deleteline 删除线
				
	3.表格相关的属性
		1.表格尺寸
			表格在设置宽高时可以选择:
				1.为table标签固定宽高,单元格自动分配大小
				2.为td单元格设置宽高,由内容决定表格整体大小
				二选一
		2.table标签完全支持盒模型,默认采用border-box计算尺寸
			tr,td标签,不完全支持盒模型
			td不支持margin属性
		3.表格边框合并
			将单元格边框和表格边框合并在一起
			属性: border-collapse
			取值: 
				1.seperate(默认值,边框分离)
				2.collapse设置边框合并
		4.调整单元格边框之间的距离
			属性: border-spacing
			取值: h-value v-value;
				语法注意: 
					h-value 表示水平方向上的边距
					v-value 表示垂直方向上的边距
					该属性必须添加给table标签,要求必须是边框分离状态才起作用
	4.过渡效果
		1.什么是过渡:
			过渡指的是元素在两种状态切换时的平滑过渡效果
		2.过渡相关的属性:
			1.指定过渡时长
				属性:transition-duration
				取值: 以s/ms为单位的数值
			2.指定过渡属性
				属性: transition-property
				取值: 大部分的CSS属性名
				语法:
					1.width(指定单个属性名)
					2.width,height(指定多个属性名,使用逗号隔开)
					3.all(指定所有繁盛值改变的属性)
			3.指定过渡繁盛的时间变化曲率
				属性; transition-timing-function
				取值:
					1.linear 匀速变化
					2.ease   默认值,慢速开始,中间加速,慢速结束
					3.ease-in 慢速开始,快速结束
					4.ease-out快速开始,慢速结束
					5.ease-in-out 慢速开始和结束,中间过程先加速后减速
			4.指定延迟时间
				属性: transition-delay
				取值: 以s/ms 为单位的数值,设置过渡效果延迟多久执行
				练习:
					创建200*200的元素
					鼠标悬停时
						改变背景颜色,改变尺寸为300*300
						改变元素形状为圆形
						所有的改变在3s内完成
		3.简写属性
			属性: transition
			取值: property duration timing-function delay;
			语法:
				1.duration 是必填项,其他项可以省略
				2.可以分别为属性设置过渡时长
					transition: width 2s,height 3s,background 5s;
	5.CSS常用的布局方式
		1.布局:
			设置元素的排列和显示
		2.分类:
			1.标准流布局(静态布局,文档流布局)
				默认的布局都是标准流布局
				特点: 元素按照类型和书写顺序,从左到右,从上到下依次显示
			2.浮动布局
				元素设置浮动之后,可以停靠在其他元素的边缘
				属性: 
					float
				取值: 
					left / right / none(默认值)	
					left : 元素左浮动,直到紧靠其他元素边缘
					right: 元素右浮动,直到紧靠其他元素边缘
				特点: 
					1.元素浮动后,会脱离文档流,在文档中不再占位表现为漂浮在文档上方,后面正常的元素会向前占位
					2.多个元素浮动时,会依次停靠在前一个浮动元素的边缘,如果当前父元素中宽度无法容纳,会自动换行显示
					3.任何元素只要设置浮动都可以设置宽高
					4.文字环绕效果.浮动元素不占位,会遮挡正常元素的显示,只遮挡正常元素的位置,不影响正常内容显示,内容会围绕在浮动元素周围显示
					5.浮动元素水平方向没有缝隙,可以解决行内元素或行内块元素,水平方向上由于换行导致的空隙问题
					
			
				浮动引起的问题:
					由于子元素全部浮动,在文档中不占位,造成父元素高度为0,影响后面布局
					解决办法
						1.给父元素固定高度
						2.给父元素设置overflow:hidden;
						3.标准做法:清楚浮动带来的影响
							属性: clear
							取值: left/center/both
							用法:
								为元素设置clear属性
								left:当前元素不受浮动元素的影响
								right:当前元素不受浮动元素影响
								both: 不受左浮动或右浮动元素的影响
							解决父元素高度为零
								步骤: 
									1.在父元素的末尾添加空的子元素(块元素)
									2.为父元素设置overflow:hidden;
									3.在父元素末尾添加空的子元素(块元素)
										设置子元素clear:both;
				

			3.定位布局
				1.可以设置元素在网页中的显示位置
					属性: position
					取值: 	
						1.static  (静态布局,默认值)
						2.relative(相对定位)
						3.absolute(绝对定位)
						4.fixed	  (固定定位)
					注意: 只有元素设置position为relative/absolute/fixed,才称元素已定位元素
				2.定位详解
					1.相对定位
						position: relative;
						特点: 元素一旦相对定位,可以参照他在文档中的原始位置进行偏移,任然在文档中占位(保留他原始位置)
						偏移属性:
							top / right / bottom / left
							取像素值,设置元素的偏移距离
							top: 	设置元素距离顶部的偏移量,正值元素下移
							bottom: 设置元素距离底部的偏移量,正值元素上移
							left: 	设置元素距离左部的偏移量,正值元素右移
							right: 	设置元素距离右部的偏移量,正值元素左移
					2.绝对定位
						属性: position:absolute
						特点: 
							1.元素设置绝对定位会参照一个离他最近的已经定位的祖先元素进行偏移,如果没有已定位的祖先元素则参照浏览器窗口进行偏移
							2.元素设置定位会脱离文档流,父元素高度为0
						使用: 
							1.一般采用父元素相对定位,子元素绝对定位,实现元素的偏移
							2.偏移属性是根据元素的参照物进行偏移
							3.
					3.元素的堆叠次序
						元素出现相互重叠时的显示次序
						属性: z-index
						取值: 元素单位的数值,默认为0,数值越大越靠上显示
						注意:
							只有当前元素设置定位布局,z-index才有效
					固定定位
						position:fixed
						特点:
							元素设置固定定位,会参照浏览器窗口进行偏移
	6.元素显示效果
		1.设置元素显示与隐藏
			属性: visibility
			取值: 
				1.visible(默认可见)
				2.hidden (元素隐藏,依旧占位)
		2.转换元素类型
			属性: display
			取值: 
				1.inline行内元素
				2.block 块元素
				3.inline-block 行内块元素
		3.元素透明度设置
			1.rgba(r.g.b.a)
			2.属性: opacity
			      取值: 0-1(0透明,1不透明)
 			使用:opacity会使包含元素自身和其后代子元素在内的所有显示效果都是半透明
 			rgba()只针对当前元素的指定属性实现半透明,文本的半透明效果会被子元素继承
 			
 		4.鼠标形状改变
 			默认情况下鼠标悬停在普通文本上显示为 "I" ,悬停在超链接内容上,显示为手指形状,其他元素显示为箭头
 			属性: cursor
 			取值: 			
				1.default
				2.pointer (手指形状)
				3.text    ("I")
		5.行内块元素的垂直对齐方式
			行内块元素默认按照文本的基线对齐,会出现元素排列不齐的情况
			属性: vertical-align
			取值: top / middle / bottom
			使用:
				为行内块元素设置vertical-align,调整左右元素
		6.列表相关属性
			1.list-style-type
				设置项目符号的类型
				取值:square
					circle
					disc
					none
			2.list-style-image
				使用图片自定义项目符号
				取值:url()
			3.list-style-position
				设置项目符号的位置
				默认显示在内容框的左侧
				取值:
					1.outside 显示在内容框外部
					2.inside  显示在内容框内部
			4.简写属性
				list-style: type/url position;
				取消项目符号:
					liststyle:none;
				
	7.元素的转换效果
		1.元素的转换效果主要指元素可以发生平移,缩放,旋转变换
		2.属性: transform
			取值:转换函数
			注意:多个转换件数之间使用空格隔开
		3.元素的转换基准点
			默认情况下,元素以中心点作为转换的基准点
			调整基准点:
			属性: transform-origin
			取值:x y
				可以使用像素值/ 百分比 / 方位值表示 基准点的位置
				左上角  0px  0px
				右下角100% 100%
				右上角100% 0%
				方位值:
					left center right
					top  center bottom
		4.平移变换
			1.作用: 改变元素在文档中的位置
			2.使用;
				属性:transform
				取值:
					1.translate(x,y)
					x,y分别表示元素在x轴和y轴上的平移距离
					取像素值,可正可负,区分平移方向
					2.translate(x)
						一个值表示沿x轴平移
					3.translateX(value)
						指定沿X轴平移
					4.translateY(value)
						指定沿Y轴平移
		5.缩放变换
			改变元素的显示尺寸(放大或缩小)
			属性: transform
			取值; scale(value)
				value为无单位数值,表示缩放比例
				1.value>1 元素放大
				2.0<value<1 元素缩小
				3.value <0 数值任然表示缩放比,符号表示元素会被翻转
		6.旋转变换
			可以设置元素旋转一定的角度显示
			属性:transform
			取值: rotate(deg)
				取角度值,以deg为单位
			使用: 
				1.rotate()表示平面旋转
				正值表示顺时针,复制表示逆时针旋转
				2.3D旋转
					rotateX(deg) 沿X轴旋转
					rotateY(deg) 沿Y轴旋转
